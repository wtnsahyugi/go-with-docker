version: '2'

services:
    postgres:
        image: postgres:latest
        ports:
            - "5432:5432"
        networks:
            - backtier
        environment:
            POSTGRES_USER: go
            POSTGRES_PASSWORD: go
            POSTGRES_DB: go
        volumes:
            - pgdata:/var/lib/postgresql/data
            - .:/application/test2

    go:
        build: .
        links:
            - postgres:db # [other container]:[alias in this container]
            # this will create environment variables in the go container
            # with ip and port info for the postgres container
            # also creates entries in /etc/hosts with ip info
        # ports:
            # - "8080" # this is port i'm exposing in the container
        volumes:
            - .:/go/src/test2
        working_dir: /go/src/test2
        command: go run server.go
        networks:
            - backtier
        #command: go run server.go
        
    proxy:
        image: nginx:latest
        ports:
            - "80:80" # host:container
            - "443:443"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            # connect host's ./nginx.conf with container's nginx.conf
            # :ro == read only perms in container
        links:
            - go:app # [other container]:[alias in this container]
            # creates environment variables in proxy container
            # with ip and port info for go container
            # also creates entries in /etc/hosts with ip info
        networks:
            - backtier

volumes:
    pgdata: {}

networks:
    backtier:
        driver: bridge
        ipam:
            config:
                - subnet: 172.15.0.0/16
                  gateway: 172.15.0.1
